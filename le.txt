-- Roblox Executor Script
-- Features: Draggable GUI, Minimize, Close, Player Targeting, Teleport, Noclip, Distance Adjustment, Auto Platform, Position Saving, Nearest Player, Look At Body Part, Customizable Name Tags

-- Configuration (EDIT THESE VALUES)
local KEY = "123456" -- Change this to your desired key
local EXPIRATION_DATE = {
    Year = 2025,
    Month = 5,
    Day = 22,
    Hour = 0,
    Minute = 0,
    Second = 0
}

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- Variables
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Camera = workspace.CurrentCamera

-- State Variables
local NoClipping = false
local Authenticated = false
local Minimized = false
local AutoPlatform = false
local RunningAway = false
local FollowingTarget = false
local AutoNextTarget = false
local SubMenuVisible = false
local LookingAtPlayer = false
local LookTarget = nil
local LookBodyPart = "Head"  -- Default body part to look at
local BodyParts = {"Head", "UpperTorso", "HumanoidRootPart", "LeftFoot", "RightFoot"}
local BodyPartIndex = 1

-- Distance Settings
local DistanceBehind = 5
local DistanceAbove = 0
local DetectionRadius = 20

-- Safe Position Boundaries
local SafePositionMin = Vector3.new(-1000, -1000, -1000)
local SafePositionMax = Vector3.new(1000, 1000, 1000)

-- Saved Position
local SavedPosition = nil

-- Target Variables
local TargetPlayer = nil
local PlayerList = {}

-- Player's name display settings
local NameColor = Color3.fromRGB(255, 255, 255)  -- Default color: White
local DisplayMode = "name"  -- Default: Show name
local DisplayFontSize = 14  -- Default font size
local ShowHP = true  -- Default: Show HP

-- Create GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ExecutorGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 350, 0, 400) -- Reduced height
MainFrame.Position = UDim2.new(0.5, -175, 0.5, -200)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true -- Enable built-in dragging
MainFrame.Parent = ScreenGui

-- Add UICorner for rounded corners
local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 8)
MainCorner.Parent = MainFrame

-- Add UIStroke for rainbow border
local MainStroke = Instance.new("UIStroke")
MainStroke.Thickness = 2
MainStroke.Color = Color3.fromRGB(255, 0, 0)
MainStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
MainStroke.Parent = MainFrame

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

-- Add UICorner for title bar
local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 8)
TitleCorner.Parent = TitleBar

-- Title
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, -90, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.BackgroundTransparency = 1
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 16
Title.Font = Enum.Font.SourceSansBold
Title.Text = "Roblox Executor"
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = TitleBar

-- SubMenu Button
local SubMenuButton = Instance.new("TextButton")
SubMenuButton.Name = "SubMenuButton"
SubMenuButton.Size = UDim2.new(0, 30, 0, 30)
SubMenuButton.Position = UDim2.new(1, -90, 0, 0)
SubMenuButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
SubMenuButton.BorderSizePixel = 0
SubMenuButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SubMenuButton.TextSize = 16
SubMenuButton.Font = Enum.Font.SourceSansBold
SubMenuButton.Text = "â‰¡"
SubMenuButton.Parent = TitleBar

-- Add UICorner for submenu button
local SubMenuCorner = Instance.new("UICorner")
SubMenuCorner.CornerRadius = UDim.new(0, 8)
SubMenuCorner.Parent = SubMenuButton

-- Close Button
local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -30, 0, 0)
CloseButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
CloseButton.BorderSizePixel = 0
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 16
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.Text = "X"
CloseButton.Parent = TitleBar

-- Add UICorner for close button
local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 8)
CloseCorner.Parent = CloseButton

-- Minimize Button
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Position = UDim2.new(1, -60, 0, 0)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.TextSize = 16
MinimizeButton.Font = Enum.Font.SourceSansBold
MinimizeButton.Text = "-"
MinimizeButton.Parent = TitleBar

-- Add UICorner for minimize button
local MinimizeCorner = Instance.new("UICorner")
MinimizeCorner.CornerRadius = UDim.new(0, 8)
MinimizeCorner.Parent = MinimizeButton

-- Target Section (New Feature)
local TargetSection = Instance.new("Frame")
TargetSection.Name = "TargetSection"
TargetSection.Size = UDim2.new(0.95, 0, 0, 120)
TargetSection.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
TargetSection.BorderSizePixel = 0
TargetSection.Parent = MainFrame

-- Add UICorner for target section
local TargetSectionCorner = Instance.new("UICorner")
TargetSectionCorner.CornerRadius = UDim.new(0, 8)
TargetSectionCorner.Parent = TargetSection

local TargetTitle = Instance.new("TextLabel")
TargetTitle.Name = "TargetTitle"
TargetTitle.Size = UDim2.new(1, 0, 0, 30)
TargetTitle.BackgroundTransparency = 1
TargetTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
TargetTitle.TextSize = 16
TargetTitle.Font = Enum.Font.SourceSansBold
TargetTitle.Text = "Target Selection"
TargetTitle.Parent = TargetSection

local TargetDropdown = Instance.new("TextButton")
TargetDropdown.Name = "TargetDropdown"
TargetDropdown.Size = UDim2.new(0.6, 0, 0, 30)
TargetDropdown.Position = UDim2.new(0.05, 0, 0, 35)
TargetDropdown.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
TargetDropdown.BorderSizePixel = 0
TargetDropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
TargetDropdown.TextSize = 14
TargetDropdown.Font = Enum.Font.SourceSans
TargetDropdown.Text = "Select Target"
TargetDropdown.Parent = TargetSection

-- Add UICorner for target dropdown
local TargetDropdownCorner = Instance.new("UICorner")
TargetDropdownCorner.CornerRadius = UDim.new(0, 6)
TargetDropdownCorner.Parent = TargetDropdown

-- Reload Button
local ReloadButton = Instance.new("TextButton")
ReloadButton.Name = "ReloadButton"
ReloadButton.Size = UDim2.new(0.25, 0, 0, 30)
ReloadButton.Position = UDim2.new(0.7, 0, 0, 35)
ReloadButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ReloadButton.BorderSizePixel = 0
ReloadButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ReloadButton.TextSize = 14
ReloadButton.Font = Enum.Font.SourceSans
ReloadButton.Text = "Reload"
ReloadButton.Parent = TargetSection

-- Add UICorner for reload button
local ReloadCorner = Instance.new("UICorner")
ReloadCorner.CornerRadius = UDim.new(0, 6)
ReloadCorner.Parent = ReloadButton

-- Follow Button (New Feature)
local FollowButton = Instance.new("TextButton")
FollowButton.Name = "FollowButton"
FollowButton.Size = UDim2.new(0.45, 0, 0, 35)
FollowButton.Position = UDim2.new(0.05, 0, 0, 75)
FollowButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
FollowButton.BorderSizePixel = 0
FollowButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FollowButton.TextSize = 14
FollowButton.Font = Enum.Font.SourceSansBold
FollowButton.Text = "Follow: OFF"
FollowButton.Parent = TargetSection

-- Add UICorner for follow button
local FollowCorner = Instance.new("UICorner")
FollowCorner.CornerRadius = UDim.new(0, 6)
FollowCorner.Parent = FollowButton

-- Nearest Player Button (New Feature)
local NearestPlayerButton = Instance.new("TextButton")
NearestPlayerButton.Name = "NearestPlayerButton"
NearestPlayerButton.Size = UDim2.new(0.45, 0, 0, 35)
NearestPlayerButton.Position = UDim2.new(0.5, 0, 0, 75)
NearestPlayerButton.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
NearestPlayerButton.BorderSizePixel = 0
NearestPlayerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
NearestPlayerButton.TextSize = 14
NearestPlayerButton.Font = Enum.Font.SourceSansBold
NearestPlayerButton.Text = "Select Nearest"
NearestPlayerButton.Parent = TargetSection

-- Add UICorner for nearest player button
local NearestPlayerCorner = Instance.new("UICorner")
NearestPlayerCorner.CornerRadius = UDim.new(0, 6)
NearestPlayerCorner.Parent = NearestPlayerButton

-- Function to select nearest player
local function SelectNearestPlayer()
    local closestPlayer = nil
    local closestDistance = math.huge
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local distance = (HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if distance < closestDistance then
                closestPlayer = player
                closestDistance = distance
            end
        end
    end

    if closestPlayer then
        TargetPlayer = closestPlayer
        TargetDropdown.Text = closestPlayer.Name
        CurrentTargetLabel.Text = "Current Target: " .. closestPlayer.Name
    end
end

-- Bind Nearest Player Button to SelectNearestPlayer function
NearestPlayerButton.MouseButton1Click:Connect(SelectNearestPlayer)

-- Add all players to the dropdown list
local function PopulatePlayerList()
    -- Clear existing buttons
    for _, child in pairs(PlayerScrollFrame:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end

    -- Clear player list
    PlayerList = {}

    -- Add all players except local player
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(PlayerList, player)
            
            local playerButton = Instance.new("TextButton")
            playerButton.Name = player.Name .. "Button"
            playerButton.Size = UDim2.new(0.9, 0, 0, 30)
            playerButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            playerButton.BorderSizePixel = 0
            playerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            playerButton.TextSize = 14
            playerButton.Font = Enum.Font.SourceSans
            playerButton.Text = player.Name
            playerButton.ZIndex = 12
            playerButton.Parent = PlayerScrollFrame
            
            -- Add UICorner for player button
            local playerButtonCorner = Instance.new("UICorner")
            playerButtonCorner.CornerRadius = UDim.new(0, 4)
            playerButtonCorner.Parent = playerButton
            
            playerButton.MouseButton1Click:Connect(function()
                TargetPlayer = player
                TargetDropdown.Text = player.Name
                DropdownFrame.Visible = false
                
                -- Also set as look target
                LookTarget = player
                CurrentTargetLabel.Text = "Current Target: " .. player.Name
            end)
        end
    end

    -- Update canvas size based on number of players
    local contentHeight = #PlayerList * 35
    PlayerScrollFrame.CanvasSize = UDim2.new(0, 0, 0, contentHeight)
end

-- Update player list when needed
ReloadButton.MouseButton1Click:Connect(PopulatePlayerList)

-- Automatically check for players' expiration
local function CheckExpiration()
    local currentTime = os.time()
    local expirationTime = os.time({
        year = EXPIRATION_DATE.Year,
        month = EXPIRATION_DATE.Month,
        day = EXPIRATION_DATE.Day,
        hour = EXPIRATION_DATE.Hour,
        min = EXPIRATION_DATE.Minute,
        sec = EXPIRATION_DATE.Second
    })

    local timeLeft = expirationTime - currentTime

    if timeLeft <= 0 then
        -- Script has expired
        AuthFrame.Visible = false
        FeaturesFrame.Visible = false
        ExpiredFrame.Visible = true
        return true
    else
        -- Calculate time left
        local days = math.floor(timeLeft / 86400)
        local hours = math.floor((timeLeft % 86400) / 3600)
        local minutes = math.floor((timeLeft % 3600) / 60)
        local seconds = timeLeft % 60
        
        ExpirationLabel.Text = string.format("Expires in: %d days, %02d:%02d:%02d", days, hours, minutes, seconds)
        return false
    end
end

-- Start rainbow border effect
local function StartRainbowEffect()
    local colors = {
        Color3.fromRGB(255, 0, 0),    -- Red
        Color3.fromRGB(255, 165, 0),  -- Orange
        Color3.fromRGB(255, 255, 0),  -- Yellow
        Color3.fromRGB(0, 255, 0),    -- Green
        Color3.fromRGB(0, 0, 255),    -- Blue
        Color3.fromRGB(75, 0, 130),   -- Indigo
        Color3.fromRGB(238, 130, 238) -- Violet
    }

    local index = 1

    spawn(function()
        while ScreenGui.Parent do
            local targetColor = colors[index]
            local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Linear)
            
            local mainTween = TweenService:Create(MainStroke, tweenInfo, {Color = targetColor})
            mainTween:Play()
            
            index = (index % #colors) + 1
            wait(0.5)
        end
    end)
end

-- Call the start rainbow effect function
StartRainbowEffect()

